syntax = "proto3";

package orchestrator;

message Name {
  string name = 1;
}

message QueueCreation {
  string queue_name = 1;
  bool create_dlq = 2;
  bool is_exclusive = 3;
}

message RouterCreation {
  string router_name = 1;
  RouterPrefix prefix = 2;
  RouterType router_type = 3;
}

message Bind {
  string destination = 1;
  string source = 2;
  map<string, string> filters = 3;
}

message Status {
  bool status = 1;
}

enum RouterPrefix {
    P_DIRECT = 0;
    P_TOPIC = 1;
    P_HEADERS = 2;
    P_FANOUT = 3;
}

enum RouterType {
    T_QUEUE = 0;
    T_TOPIC = 1;
    T_HEADERS = 2;
}

service Orchestrator {
  rpc CheckIfQueueExists(Name)  returns (Status) {}
  rpc CheckIfRouterExists(Name)  returns (Status) {}
  rpc CreateQueue(QueueCreation) returns (Name) {}
  rpc CreateRouter(RouterCreation) returns (Name) {}
  rpc DeleteQueue(Name) returns (Status) {}
  rpc DeleteRouter(Name) returns (Status) {}
  rpc BindQueueToRouter(Bind) returns (Status) {}
  rpc BindRouterToRouter(Bind) returns (Status) {}
}